import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektPlugin
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask
import io.gitlab.arturbosch.detekt.report.ReportMergeTask

buildscript {
    ext {
        kotlin_version = '1.8.20'
        hilt_version = '2.45'
        compose_nav_version = '2.5.3'
        datastore_preferences_version = '1.0.0'
        play_services_location_version = '21.0.1'
        espresso_core_version = '3.5.1'
        junit_version = '4.13.2'
        mockk_version = '1.13.3'
        androidx_junit_version = '1.1.5'
        paging_version = '3.1.1'
        room_version = '2.5.1'
        detekt_version = '1.22.0'
        twitter_compose_rules_version = '0.0.26'
    }
    dependencies {
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "com.twitter.compose.rules:detekt:$twitter_compose_rules_version"
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.0-rc01' apply false
    id 'com.android.library' version '8.0.0' apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'io.gitlab.arturbosch.detekt' version "$detekt_version"
}
// see https://detekt.dev/docs/introduction/reporting/#merging-reports
tasks.register("reportMerge", ReportMergeTask) {
    output = project.layout.buildDirectory.file("reports/detekt/merge.xml") // or "reports/detekt/merge.sarif"
}
subprojects {
    apply plugin: 'io.gitlab.arturbosch.detekt'

    dependencies {
        detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
        detektPlugins "com.twitter.compose.rules:detekt:$twitter_compose_rules_version"
    }

    detekt {
        buildUponDefaultConfig = true
        parallel = true
        config = files("$project.rootDir/config/detekt/detekt.yml")
        baseline = file("$project.rootDir/config/detekt/baseline.yml")
        ignoreFailures = false
        autoCorrect = true

        reports.xml.required.set(true)
    }

    plugins.withType(DetektPlugin) {
        tasks.withType(Detekt) { detektTask ->
            finalizedBy(reportMerge)

            reportMerge.configure { mergeTask ->
                mergeTask.input.from(detektTask.xmlReportFile)
            }
        }
    }
}
tasks.withType(Detekt).configureEach {
    jvmTarget = "17"
}
tasks.withType(DetektCreateBaselineTask).configureEach {
    jvmTarget = "17"
}
task detektProjectBaseline(type: DetektCreateBaselineTask) {
    description = "Overrides current baseline."
    ignoreFailures.set(true)
    parallel.set(true)
    buildUponDefaultConfig.set(true)
    setSource(files(rootDir))
    config.setFrom(files("$rootDir/config/detekt/detekt.yml"))
    baseline.set(file("$rootDir/config/detekt/baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/resources/**")
    exclude("**/build/**")
}